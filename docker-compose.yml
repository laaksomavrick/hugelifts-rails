version: "3"

networks:
  front-tier:
  back-tier:
    driver: bridge

volumes:
  grafana-storage:
  loki-storage:
  prometheus-storage:

services:
  reverse-proxy:
    image: nginx:stable
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - app
      - db
      - grafana
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    networks:
      - front-tier
      - back-tier
  app:
    image: hugelifts:latest
    restart: unless-stopped
    expose:
      - "3000"
    depends_on:
      - db
    env_file:
      - app.env
    volumes:
      - ./log:/app/log
    networks:
      - front-tier
      - back-tier
  db:
    image: postgres:11
    restart: unless-stopped
    expose:
      - "5432"
    env_file:
      - db.env
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    networks:
      - back-tier
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - back-tier
  loki:
    image: grafana/loki:2.6.1
    restart: unless-stopped
    expose:
      - "3100"
    volumes:
      - loki-storage:/loki
    networks:
      - back-tier
  promtail:
    image: grafana/promtail:2.6.1
    restart: unless-stopped
    volumes:
      - ./config/promtail.yml:/etc/promtail/config.yml
      - ./log:/app/log
    networks:
      - back-tier
  grafana:
    image: grafana/grafana:9.2.2
    restart: unless-stopped
    ports:
      - 3000:3000
    env_file:
      - grafana.env
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/
    networks:
      - back-tier
      - front-tier
  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    expose:
      - 9100
    networks:
      - back-tier
  prometheus:
    image: prom/prometheus:2.40.4
    restart: unless-stopped
    volumes:
      - ./config/prometheus/:/etc/prometheus/
      - prometheus-storage:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - back-tier
  alertmanager:
    image: prom/alertmanager:0.24.0
    restart: unless-stopped
    expose:
      - 9093
    volumes:
      - .config/alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
